/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import Controllers.BillController;
import Controllers.ClientController;
import Entities.Analysis;
import Entities.Client;
import Entities.Order;
import Entities.Result;
import com.itextpdf.text.DocumentException;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import static java.io.FileDescriptor.out;
import java.io.FileNotFoundException;
import static java.lang.System.out;
import java.sql.Date;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.List;
import java.util.concurrent.ExecutionException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.INFORMATION_MESSAGE;
import javax.swing.ListModel;
import javax.swing.SwingWorker;
//import static sun.misc.MessageUtils.out;
import utilities.AbstractGuiTableModels;
import utilities.GuiListModels;
import utilities.OrderTableModels;
import java.lang.NullPointerException;
import javax.swing.JButton;
import utilities.ResultsPDF;
import utilities.Tester;

/**
 *
 * @author Alaa Shafshak
 */
public class BillFrame extends javax.swing.JPanel {

    private final DefaultListModel listModel = new DefaultListModel();
    private final OrderTableModels ordertable = new OrderTableModels();
    private final GuiListModels<Analysis> analyselist = new GuiListModels();
    private final GuiListModels<String> resultlist = new GuiListModels<>();
    Result r = null;
    
    public BillFrame() {
        initComponents();
        jScrollPane4.getViewport().setBackground(new Color(250,251,252));
        initActions();
        new findAllResultsOrders().execute();
        resultsOrders.setModel(resultlist);
    }

    private void initActions() {
        analysisList.setModel((ListModel) analyselist);
        clientsList.setModel((ListModel) listModel);
        appointmentsTable.setModel(ordertable);
        //participationTextField.setVisible(false);
        //saveParticipBtn.setVisible(false);
        //particip.setVisible(false);

    }
    Order o;
    Client c;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        analysisList = new javax.swing.JList<String>();
        participationTextField = new javax.swing.JTextField();
        particip = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        saveParticipBtn = new javax.swing.JButton();
        doneButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        appointmentsTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        searchClientText = new javax.swing.JTextField();
        searchClientBtn = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        clientsList = new javax.swing.JList<String>();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        resultsOrders = new javax.swing.JList();
        jLabel3 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setToolTipText("");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel1.setName(""); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(912, 470));

        jScrollPane1.setPreferredSize(new java.awt.Dimension(400, 380));

        analysisList.setBackground(new java.awt.Color(250, 251, 252));
        analysisList.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(22, 113, 185), 1, true));
        analysisList.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        analysisList.setForeground(new java.awt.Color(22, 113, 185));
        analysisList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        analysisList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                analysisListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(analysisList);

        participationTextField.setBackground(new java.awt.Color(250, 251, 252));
        participationTextField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(22, 113, 185), 1, true));
        participationTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                participationTextFieldActionPerformed(evt);
            }
        });

        particip.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        particip.setForeground(new java.awt.Color(22, 113, 185));
        particip.setText("Participation");

        jLabel5.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(22, 113, 185));
        jLabel5.setText("Client's Orders");

        jSeparator1.setForeground(new java.awt.Color(22, 113, 185));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel6.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(22, 113, 185));
        jLabel6.setText("Analysis");

        saveParticipBtn.setBackground(new java.awt.Color(22, 113, 185));
        saveParticipBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        saveParticipBtn.setForeground(new java.awt.Color(22, 113, 185));
        saveParticipBtn.setText("Save");
        saveParticipBtn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(22, 113, 185), 1, true));
        saveParticipBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveParticipBtnActionPerformed(evt);
            }
        });

        doneButton.setBackground(new java.awt.Color(22, 113, 185));
        doneButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        doneButton.setForeground(new java.awt.Color(22, 113, 185));
        doneButton.setText("Done");
        doneButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(22, 113, 185), 1, true));
        doneButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                doneButtonMousePressed(evt);
            }
        });
        doneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneButtonActionPerformed(evt);
            }
        });

        jScrollPane4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(22, 113, 185), 2, true));

        appointmentsTable.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        appointmentsTable.setForeground(new java.awt.Color(22, 113, 185));
        appointmentsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        appointmentsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                appointmentsTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(appointmentsTable);
        if (appointmentsTable.getColumnModel().getColumnCount() > 0) {
            appointmentsTable.getColumnModel().getColumn(0).setMinWidth(40);
            appointmentsTable.getColumnModel().getColumn(0).setPreferredWidth(40);
            appointmentsTable.getColumnModel().getColumn(0).setMaxWidth(40);
        }

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(22, 113, 185));
        jButton1.setText("Clear");
        jButton1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(22, 113, 185), 1, true));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE))
                .addGap(22, 22, 22)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(particip, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(doneButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(participationTextField)
                            .addComponent(saveParticipBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jLabel6))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(particip)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(participationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(24, 24, 24)
                                .addComponent(saveParticipBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(doneButton)))))
                .addGap(18, 18, 18))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        searchClientText.setBackground(new java.awt.Color(250, 251, 252));
        searchClientText.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        searchClientText.setForeground(new java.awt.Color(22, 113, 185));
        searchClientText.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(22, 113, 185), 1, true));
        searchClientText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchClientTextActionPerformed(evt);
            }
        });

        searchClientBtn.setBackground(new java.awt.Color(22, 113, 185));
        searchClientBtn.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        searchClientBtn.setForeground(new java.awt.Color(22, 113, 185));
        searchClientBtn.setText("Search");
        searchClientBtn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(22, 113, 185), 1, true));
        searchClientBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchClientBtnActionPerformed(evt);
            }
        });

        clientsList.setBackground(new java.awt.Color(250, 251, 252));
        clientsList.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(22, 113, 185), 1, true));
        clientsList.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        clientsList.setForeground(new java.awt.Color(22, 113, 185));
        clientsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        clientsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clientsListMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(clientsList);

        jLabel4.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(22, 113, 185));
        jLabel4.setText("Clients");

        resultsOrders.setBackground(new java.awt.Color(250, 251, 252));
        resultsOrders.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(22, 113, 185), 1, true));
        resultsOrders.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        resultsOrders.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                resultsOrdersMousePressed(evt);
            }
        });
        jScrollPane5.setViewportView(resultsOrders);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(22, 113, 185));
        jLabel3.setText("Orders with finished Results");

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/rsz_refresh.png"))); // NOI18N
        jButton3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(22, 113, 185), 1, true));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(searchClientText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchClientBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 566, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane5))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(13, 13, 13))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3))
                            .addComponent(searchClientBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(searchClientText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                    .addComponent(jScrollPane5)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void searchClientTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchClientTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchClientTextActionPerformed

    private void searchClientBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchClientBtnActionPerformed

        String subName = searchClientText.getText();
        new SearchClientPerformed(subName).execute();
    }//GEN-LAST:event_searchClientBtnActionPerformed

    private void clientsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clientsListMouseClicked
        if (evt.getClickCount() == 2) {
            if (listModel.isEmpty()) {
                return;
            }
            try {
                c = (Client) listModel.getElementAt(clientsList.getSelectedIndex());
                analyselist.removeAll();
                searchClientText.setText(c.getFirstName() + " " + c.getLastName());
                String fn = c.getFirstName();
                String ln = c.getLastName();
                new AddOrder(fn, ln).execute();
            } catch (java.lang.ArrayIndexOutOfBoundsException ex) {

            }

        }
    }//GEN-LAST:event_clientsListMouseClicked

    private void appointmentsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_appointmentsTableMouseClicked
        if (evt.getClickCount() == 2) {
            if (ordertable.isEmpty()) {
                return;
            }
            o = ordertable.get(appointmentsTable.getSelectedRow());
            int id = o.getId();
            LocalDate date = o.getDate();

            new AddAnalysis(id).execute();

        }

    }//GEN-LAST:event_appointmentsTableMouseClicked

    private void participationTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_participationTextFieldActionPerformed

    }//GEN-LAST:event_participationTextFieldActionPerformed

    private void saveParticipBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveParticipBtnActionPerformed

        if (participationTextField.getText() == null || participationTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this,
                    "Participation field should not be empty",
                    "Entry Error",
                    JOptionPane.ERROR_MESSAGE);
            participationTextField.requestFocus();
            return;
        }
        double p;
        String s = participationTextField.getText();
        try{
            p = Double.parseDouble(s);
        }catch(java.lang.NumberFormatException ex){
            JOptionPane.showMessageDialog(BillFrame.this,
                            "enter a number",
                            "Failed",
                            INFORMATION_MESSAGE);
            return;
        }

        //r.setParticip(p);
      //  Object a = analysisList.getSelectedValue();
      //  String st = a.toString();
        //Double particip = Double.parseDouble(st);

        //r.setParticip(p);
      //  Object a = analysisList.getSelectedValue();
      //  String st = a.toString();
        //Double particip = Double.parseDouble(st);

       try{ 
        Analysis x=analyselist.getElementAt(analysisList.getSelectedIndex());
        new SaveWorker(x.getId(), p,o.getId()).execute();
        analysisList.setSelectedIndex(analysisList.getSelectedIndex()+1);
        new Tester();
       }catch(java.lang.ArrayIndexOutOfBoundsException ex){
            JOptionPane.showMessageDialog(BillFrame.this,
                            "Select Analysis",
                            "Failed",
                            INFORMATION_MESSAGE);
       }
       
        
        
       // try {
            
            
     //   } catch (SQLException ex) {
     //       Logger.getLogger(BillFrame.class.getName()).log(Level.SEVERE, null, ex);
      //  }

        //System.out.println("Analysis: " + st);
        /*Analysis an = new Analysis(st);
        
         r = new Result(an);
         r.setParticip(p);
         r.setA(an);*/
        //JOptionPane.showMessageDialog(this,"Participation Added","Succeded",INFORMATION_MESSAGE);
        // participationTextField.setText(null);
        //searchClientText.setText(null);
    }//GEN-LAST:event_saveParticipBtnActionPerformed


    private void analysisListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_analysisListMouseClicked
        if (evt.getClickCount() == 2) {
            participationTextField.setVisible(true);
            saveParticipBtn.setVisible(true);
            particip.setVisible(true);
            if (analyselist.isEmpty()) {
                return;
            }
         //   Analysis a = analyselist.getElementAt(analysisList.getSelectedIndex());
           // int id = a.getId();
           // new AddParticip(id).execute();

        }
    }//GEN-LAST:event_analysisListMouseClicked

    private void doneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneButtonActionPerformed
       
    }//GEN-LAST:event_doneButtonActionPerformed

    private void doneButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_doneButtonMousePressed
        // TODO add your handling code here:
        searchClientText.setEnabled(true);
        o.setClient(c);
        new update().execute();
        new BillResultFrame(o, c).setVisible(true);
        /*ResultsPDF r;
            r = new ResultsPDF(o);
        try {
            r.printResultsPDF();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(BillFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(BillFrame.class.getName()).log(Level.SEVERE, null, ex);
        }*/
    }//GEN-LAST:event_doneButtonMousePressed

    private void resultsOrdersMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resultsOrdersMousePressed
        // TODO add your handling code here:
          if (evt.getClickCount() == 2) {
        String x=resultlist.getElementAt(resultsOrders.getSelectedIndex());
        String [] s=x.split(" /");
        searchClientText.setText(s[0]);
          }
    }//GEN-LAST:event_resultsOrdersMousePressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        searchClientText.setText("");
        listModel.removeAllElements();
        resultsOrders.clearSelection();
        ordertable.removeAll();
        analyselist.removeAll();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
           new findAllResultsOrders().execute();
    }//GEN-LAST:event_jButton3ActionPerformed

    public JButton getDone(){
        return doneButton;
    }
    
    private class SaveWorker extends SwingWorker<String, Void> {

        private int id;
        private double p;
        private int orderId;
        public SaveWorker(int id, double p,int orderId) {
            this.id = id;
            this.p = p;
            this.orderId=orderId;
        }

        @Override
        protected String doInBackground() throws Exception {
            new BillController().instance.updateResult(id, p,orderId);
            return null;
        }

        @Override
        //@SuppressWarnings("empty-statement")

        public void done() {
            try {
                if(get()==null)
                    return;
            } catch (InterruptedException ex) {
                Logger.getLogger(BillFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ExecutionException ex) {
                Logger.getLogger(BillFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }

  
    private class update extends SwingWorker<Void, Void>{

        @Override
        protected Void doInBackground() throws Exception {
            new BillController().instance.updatePaid(o.getId());
            return null;
            
        }
        
    }
    
    public void listClicked(Order order){
        jButton1ActionPerformed(null);
        o=order;
        searchClientText.setText(order.getClient().getFirstName()+" "+order.getClient().getLastName());
        searchClientText.setEnabled(false);
        ordertable.removeAll();
        analyselist.removeAll();
        new AddOrder(order.getClient().getFirstName(), order.getClient().getLastName()).execute();
        new AddAnalysis(order.getId()).execute();
    }

    private class AddAnalysis extends SwingWorker<List<Analysis>, Void> {

        private final int id;

        public AddAnalysis(int id) {
            this.id = id;

        }

        @Override
        protected List<Analysis> doInBackground() throws Exception {
            return BillController.instance.findAnalysisByOrd(id);
        }

        @Override
        public void done() {
            analyselist.removeAll();
            try {
                analyselist.set(get());
            } catch (InterruptedException | ExecutionException ex) {
                Logger.getLogger(BillFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }

    private class AddOrder extends SwingWorker<List<Order>, Void> {

        private final String first;
        private final String last;

        public AddOrder(String first, String last) {
            this.first = first;
            this.last = last;
        }

        @Override
        protected List<Order> doInBackground() throws Exception {
            return BillController.instance.findOrd(first, last);
        }

        @Override
        public void done() {
            ordertable.removeAll();
            try {
                ordertable.set(get());
            } catch (InterruptedException | ExecutionException ex) {
                Logger.getLogger(BillFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private class SearchClientPerformed extends SwingWorker<List<Client>, Void> {

        private final String subName;

        public SearchClientPerformed(String subName) {
            this.subName = subName;
        }

        @Override
        protected List<Client> doInBackground() throws Exception {
            return ClientController.instance.findByLike(subName);
        }

        @Override
        public void done() {
            listModel.removeAllElements();
            try {
                for (Client c : get()) {
                    listModel.addElement(c);
                }
            } catch (InterruptedException | ExecutionException ex) {
                Logger.getLogger(BillFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    
    
    private class findAllResultsOrders extends SwingWorker<List<Client>, Void>{

        @Override
        protected List<Client> doInBackground() throws Exception {
            return ClientController.instance.findAllResults();
        }
       
        public void done(){
            
            try {
                resultlist.removeAll();
                for(Client c:get()){
                 resultlist.add(c.getFirstName()+" "+c.getLastName()+" / "+c.getPhone());
                }
                
                //resultlist.set(get());
            } catch (InterruptedException ex) {
                Logger.getLogger(BillFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ExecutionException ex) {
                Logger.getLogger(BillFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> analysisList;
    private javax.swing.JTable appointmentsTable;
    private javax.swing.JList<String> clientsList;
    private javax.swing.JButton doneButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel particip;
    private javax.swing.JTextField participationTextField;
    private javax.swing.JList resultsOrders;
    private javax.swing.JButton saveParticipBtn;
    private javax.swing.JButton searchClientBtn;
    private javax.swing.JTextField searchClientText;
    // End of variables declaration//GEN-END:variables
}
